###### DEVELOPMENT #####
user www www;
worker_processes        1;
worker_rlimit_nofile    8192;
pid                     pid/nginx.pid;
error_log               log/nginx-error.log;

events {
    worker_connections  1024;
}

http {
    include                 mime.types;
    default_type            application/octet-stream;
    log_format              main '$remote_addr - $remote_user [$time_local]  $status '
                            '"$request" $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';
                            
    keepalive_timeout       5;
    client_max_body_size    20m;
    sendfile                on;
    
    gzip                    on;
    gzip_comp_level         2;
    gzip_proxied            any;
    gzip_types              text/plain text/html text/css application/x-javascript
                            text/xml application/xml application/xml+rss text/javscript;
    tcp_nopush              on;
    tcp_nodelay             off;
    
    # Directories
    client_body_temp_path tmp/client_body/  2 2;
    fastcgi_temp_path     tmp/fastcgi/;
    proxy_temp_path       tmp/proxy/;
    uwsgi_temp_path       tmp/uwsgi/;
    
    # Logging
    access_log            log/nginx-access.log  combined;
    

    
    ### edouardswiac.net
    upstream edouardswiac {
        ip_hash;
        server unix:/Users/zed/programmation/python/edouardswiac-net/sock/uwsgi.sock;
    }
    
    server {
        listen 80;
        server_name *.edouardswiac.lan;
        rewrite ^/(.*) http://edouardswiac.lan/$1 permanent;
    }
    
    server {
        listen      80;
        server_name edouardswiac.lan;
        charset     utf-8;
        
        location /media/admin/ {
            alias lib/python2.6/site-packages/django/contrib/admin/media/;
        }
        
        # Your project's static media.
        location /media/ {
            alias /Users/zed/programmation/python/edouardswiac-net/edouardswiac/media/;
        }
        
        # Finally, send all non-media requests to the Django server.
        location / {
            uwsgi_pass  edouardswiac;
            include     uwsgi_params;
        }
    }
    
    # supalumni
    upstream django {
        # Distribute requests to servers based on client IP. This keeps load
        # balancing fair but consistent per-client. In this instance we're
        # only using one uWGSI worker anyway.
        ip_hash;
        server unix:/Users/zed/programmation/python/supalumni-net/sock/uwsgi.sock;
    }
    
    server {
        listen 80;
        server_name *.supalumni.lan;
        rewrite ^/(.*) http://supalumni.lan/$1 permanent;
    }
  
    server {
        server_name supalumni.lan;
        listen 443;
        charset utf-8;
        ssl on;
        ssl_certificate /Users/zed/programmation/python/supalumni-net/ssl/server.crt;
        ssl_certificate_key /Users/zed/programmation/python/supalumni-net/ssl/server.key;
        
        location /media/admin/ {
            alias lib/python2.6/site-packages/django/contrib/admin/media/;
        }
        
        location /media/ {
            alias supalumni/static/;
        }
        
        location / {
            uwsgi_pass django;
            include uwsgi_params;
        }
    }
    
    server {
        listen      80;
        server_name supalumni.lan;
        charset     utf-8;
        
        location /media/admin/ {
            alias lib/python2.6/site-packages/django/contrib/admin/media/;
        }
        
        # Your project's static media.
        location /media/ {
            alias supalumni/static/;
        }
        
        # Finally, send all non-media requests to the Django server.
        location / {
            uwsgi_pass  django;
            include     uwsgi_params;
        }
    }
}